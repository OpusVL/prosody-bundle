# {{ env['SERIAL'] }} : {{ env['HOST'] }}.{{ env['DOMAIN'] }}

upstream keycloak_{{ env['SERIAL'] }} {
    server {{ env['CONTAINER_HOST'] or '127.0.0.1' }}:{{ env['PORTBASE'] }}80;
}

geo $admin_{{ env['SERIAL'] }} {
    default no;
    {{ env['TRUSTED_IPS'] or '10.0.0.0/8 yes; 172.16.0.0/12 yes; 192.168.0.0/16 yes;' }}
}

server {
    listen       {{ env['IP'] or '0.0.0.0' }}:80;
    server_name  sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    
    location / {
        rewrite ^ https://$host$request_uri  permanent;
    }

    location ~ /.well-known {
        root   /usr/share/nginx/html;
        allow all;
    }

}

server {
    listen       {{ env['IP'] or '0.0.0.0' }}:443 ssl http2;
    server_name  sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    ssl_certificate_key     /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/privkey.pem;
    ssl_certificate         /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;

    # Specifies the maximum accepted body size of a client request,
    # as indicated by the request header Content-Length.
    client_max_body_size 200m;

    # increase proxy buffer to handle some Odoo web requests
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    resolver 1.1.1.1;

    add_header X-Frame-Options SAMEORIGIN;

    proxy_connect_timeout       60;
    proxy_read_timeout          4800;

    location / {
        proxy_pass http://keycloak_{{ env['SERIAL'] }};
        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        # set headers
        proxy_buffer_size                  128k;
        proxy_buffers                      4 256k;
        proxy_busy_buffers_size            256k;
        proxy_set_header Referer           $http_referer;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Server-Select   $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_set_header X-Url-Scheme:     $scheme;
        proxy_set_header Cookie            $http_cookie;
        proxy_set_header Host              $host;
        proxy_http_version                 1.1;
        proxy_set_header                   Upgrade $http_upgrade;
        proxy_set_header                   Connection ‘upgrade’;

        # by default, do not forward anything
        proxy_redirect off;
    }


    location /auth/admin {
        if ($admin_{{ env['SERIAL'] }} = no) {
            return 403;
        }
        
        proxy_pass http://keycloak_{{ env['SERIAL'] }};
        
        # set headers
        proxy_buffer_size                  128k;
        proxy_buffers                      4 256k;
        proxy_busy_buffers_size            256k;
        proxy_set_header Referer           $http_referer;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Server-Select   $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_set_header X-Url-Scheme:     $scheme;
        proxy_set_header Cookie            $http_cookie;
        proxy_set_header Host              $host;
        proxy_http_version                 1.1;
        proxy_set_header                   Upgrade $http_upgrade;
        proxy_set_header                   Connection ‘upgrade’;

        # by default, do not forward anything
        proxy_redirect off;
    }
}

upstream movim_{{ env['SERIAL'] }} {
    server {{ env['CONTAINER_HOST'] or '127.0.0.1' }}:{{ env['PORTBASE'] }}81;
}
    
server {
    listen       {{ env['IP'] or '0.0.0.0' }}:80;
    server_name  movim.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    location / {
        rewrite ^ https://$host$request_uri  permanent;
    }

    location ~ /.well-known {
        root   /usr/share/nginx/html;
        allow all;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

server {
    listen       {{ env['IP'] or '0.0.0.0' }}:443 ssl http2;
    server_name  movim.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    ssl_certificate_key     /etc/letsencrypt/live/movim.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/privkey.pem;
    ssl_certificate         /etc/letsencrypt/live/movim.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/movim.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;

    # Specifies the maximum accepted body size of a client request,
    # as indicated by the request header Content-Length.
    client_max_body_size 200m;

    # increase proxy buffer to handle some Odoo web requests
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    resolver 1.1.1.1;

    add_header X-Frame-Options SAMEORIGIN;

    proxy_connect_timeout       60;
    proxy_read_timeout          4800;

    location / {
        proxy_pass http://movim_{{ env['SERIAL'] }};
        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        # set headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Server-Select $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Url-Scheme: $scheme;
        proxy_set_header Host $host;
        proxy_set_header Connection "Upgrade";
	    proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;

        # by default, do not forward anything
        proxy_redirect off;
    }

}

upstream xmpp_{{ env['SERIAL'] }} {
    server {{ env['CONTAINER_HOST'] or '127.0.0.1' }}:5280;
}

server {
    listen       {{ env['IP'] or '0.0.0.0' }}:80;
    server_name  {{ env['HOST'] }}.{{ env['DOMAIN'] }} conference.{{ env['HOST'] }}.{{ env['DOMAIN'] }} proxy.{{ env['HOST'] }}.{{ env['DOMAIN'] }} pubsub.{{ env['HOST'] }}.{{ env['DOMAIN'] }} upload.{{ env['HOST'] }}.{{ env['DOMAIN'] }} vjud.{{ env['HOST'] }}.{{ env['DOMAIN'] }} xmpp.{{ env['HOST'] }}.{{ env['DOMAIN'] }} chat.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    location / {
        rewrite ^ https://$host$request_uri  permanent;
    }

    location ~ /.well-known {
        root   /usr/share/nginx/html;
        allow all;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen       {{ env['IP'] or '0.0.0.0' }}:443 ssl http2;
    server_name  {{ env['HOST'] }}.{{ env['DOMAIN'] }} conference.{{ env['HOST'] }}.{{ env['DOMAIN'] }} proxy.{{ env['HOST'] }}.{{ env['DOMAIN'] }} pubsub.{{ env['HOST'] }}.{{ env['DOMAIN'] }} upload.{{ env['HOST'] }}.{{ env['DOMAIN'] }} vjud.{{ env['HOST'] }}.{{ env['DOMAIN'] }} xmpp.{{ env['HOST'] }}.{{ env['DOMAIN'] }} chat.{{ env['HOST'] }}.{{ env['DOMAIN'] }};

    ssl_certificate_key     /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/privkey.pem;
    ssl_certificate         /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sso.{{ env['HOST'] }}.{{ env['DOMAIN'] }}/fullchain.pem;

    # Specifies the maximum accepted body size of a client request,
    # as indicated by the request header Content-Length.
    client_max_body_size 200m;

    # increase proxy buffer to handle some Odoo web requests
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    resolver 1.1.1.1;

    add_header X-Frame-Options SAMEORIGIN;

    proxy_connect_timeout       60;
    proxy_read_timeout          4800;

    location / {
        proxy_pass http://xmpp_{{ env['SERIAL'] }};
        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        # set headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $remote_addr;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Server-Select $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Url-Scheme: $scheme;
        proxy_set_header Host $host;
        proxy_set_header Connection "Upgrade";
	    proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;

        # by default, do not forward anything
        proxy_redirect off;
    }

    location /.well-known/host-meta {
        proxy_pass http://xmpp_{{ env['SERIAL'] }};

        default_type 'application/xrd+xml';
    }

    location /.well-known/host-meta.json {
        proxy_pass http://xmpp_{{ env['SERIAL'] }};

        default_type 'application/jrd+json';
    }
}