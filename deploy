#!/bin/bash

# PROGNAME=$(basename $0)
# RELEASE="Revision 1.0.6"
# AUTHOR="Paul Bargewell <paul.bargewell@opusvl.com>"
# COPYTRIGHT="Copyright 2021, Opus Vision Limited T/A OpusVL"
# LICENSE="SPDX-License-Identifier: AGPL-3.0-or-later"

source ./configure

DOCKER_COMPOSE=$(which docker-compose)
CURL=$(which curl)

if [[ -z "${DOCKER_COMPOSE}" ]] || [[ -z "${CURL}" ]]; then
    echo "Missing prerequisite 'docker-compose' or 'curl'"
    exit 1
fi

# This will bring up keycloak, slapd and db

${DOCKER_COMPOSE} up -d keycloak

# Use the Keycloak API to create the realm and LDAP component

echo "Configuring KEYCLOAK"

# Wait until the keycloak instance is responding
n=0 # 6 retries every 10s
until [ "$n" -ge 6 ]; do
    ARGS=(--fail
        --silent
        -o /dev/null
        "http://127.0.0.1:${PORTBASE}80/auth/realms/master/.well-known/openid-configuration"
    )
    ${CURL} "${ARGS[@]}" && break
    if [[ $? -ne 0 ]]; then
        echo "KEYCLOAK: Retrying in 10 seconds."
        n=$((n+1))
        sleep 10
    else
        break
    fi
done

ARGS=(--request POST
    --url "http://127.0.0.1:${PORTBASE}80/auth/realms/master/protocol/openid-connect/token"
    --header "content-type: application/x-www-form-urlencoded"
    --data grant_type=password
    --data client_id=admin-cli
    --data username=admin
    --data password="${KEYCLOAK_PASSWORD}"
    --silent --fail
)

TOKEN=$(${CURL} "${ARGS[@]}" | jq -r ".access_token")
if  [[ -z "${TOKEN}" ]]; then
    echo "KEYCLOAK: Authentication failure or invalid token returned."
    exit 1
fi
echo "KEYCLOAK: Authentication Success."

ARGS=(--request POST
    --url "http://127.0.0.1:${PORTBASE}80/auth/admin/realms"
    --header "authorization: bearer ${TOKEN}"
    --header "content-type: application/json"
    --silent --fail
    --data @rest/create_realm.json
)

if [[ $(${CURL} "${ARGS[@]}") -ne 0 ]]; then
    echo "KEYCLOAK: Unable to create REALM (Does it already exist?)."
    exit 1
else
    echo "KEYCLOAK: REALM ${HOST} created."
fi

ARGS=(--request POST
    --url "http://127.0.0.1:${PORTBASE}80/auth/admin/realms/${HOST}/components"
    --header "authorization: bearer ${TOKEN}"
    --header "content-type: application/json"
    --silent --fail
    --data @rest/create_ldap.json
)

if [[ $(${CURL} "${ARGS[@]}") ]]; then
    echo "KEYCLOAK: Unable to create LDAP component."
    exit 1
else
    echo "KEYCLOAK: LDAP component created."
fi

# To get this far implies keycloak is running which means the database is ready.

sudo mkdir -p "${CONTAINER_VOLUME}/${SERIAL}/{prosody,logs}"
sudo chmod g+rw,o+rw "${CONTAINER_VOLUME}/${SERIAL}/{prosody,logs}" -R
sudo chown 1000 "${CONTAINER_VOLUME}/${SERIAL}/{prosody,logs}" -R
sudo chgrp 1000 "${CONTAINER_VOLUME}/${SERIAL}/{prosody,logs}" -R

# Start all the other containers
echo "Starting All Containers."
${DOCKER_COMPOSE} up -d
# Resolve the Movim permission error by starting movim again
echo "Taking a breath... back in 10s"
sleep 10
${DOCKER_COMPOSE} up -d movim

echo "Configuring MOVIM"

# Wait until the keycloak instance is responding
n=0 # 6 retries every 10s
until [ "$n" -ge 6 ]; do
    ARGS=(--fail 
        --silent 
        -o /dev/null 
        "http://127.0.0.1:${PORTBASE}81/?login"
    )
    ${CURL} "${ARGS[@]}" && break
    if [[ $? -ne 0 ]]; then
        echo "MOVIM: Retrying in 10 seconds."
        ${DOCKER_COMPOSE} up -d movim
        n=$((n+1))
        sleep 10
    fi
done

echo "update configuration set xmppdomain='${HOST}.${DOMAIN}', xmppdescription='${LDAP_ORGANISATION}', chatonly=true where username='admin';" | \
${DOCKER_COMPOSE} exec -T db psql -U movim -d movim

echo "Done."