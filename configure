#!/bin/bash

# PROGNAME=$(basename $0)
# RELEASE="Revision 1.0.5"
# AUTHOR="Paul Bargewell <paul.bargewell@opusvl.com>"
# COPYTRIGHT="Copyright 2021, Opus Vision Limited T/A OpusVL"
# LICENSE="SPDX-License-Identifier: AGPL-3.0-or-later"

source .env

if [[ ! -f ".env" ]]; then
  echo "ERROR: You need to create a .env file first (see .env.example)."
  exit 1
fi

SUDO=$(which sudo)

if [[ -z "${SUDO}" ]]; then
  echo "We need to elevate privileges using 'sudo' which can't be found."
  exit 1
fi

readonly PYTHON_JINJA2="import os;
import sys;
import jinja2;
from dotenv import load_dotenv;
load_dotenv(verbose=True)
sys.stdout.write(
    jinja2.Template
        (sys.stdin.read()
    ).render(env=os.environ))"

function render() {
  if [[ -f "$1" ]]; then
    echo "Templating: $1"
    # cat "$1" | python -c "${PYTHON_JINJA2}" > "${1//\.template/}"
    < "$1" python -c "${PYTHON_JINJA2}" > "${1//\.template/}"
  else
    echo "$1 File not found."
    exit 1
  fi
}

# Render the templates first

TEMPLATES=(prosody/etc/conf.d/modules.cfg.template.lua 
  prosody/etc/ldap-roster.template.py 
  prosody/etc/prosody.cfg.template.lua 
  prosody/etc/conf.d/extra.cfg.template.lua 
  prosody/etc/conf.d/logging.cfg.template.lua 
  prosody/etc/vhost.d/vhost.cfg.template.lua 
  rest/create_realm.template.json 
  rest/create_ldap.template.json 
  nginx/nginx.template.conf 
  nginx/deploy/10-prosody-certs.template
)

for TEMPLATE in "${TEMPLATES[@]}"
do
  render "$TEMPLATE"
done

# Deliver template to Nginx

${SUDO} cp nginx/deploy/{10-prosody-certs,20-reload-nginx} /etc/letsencrypt/renewal-hooks/deploy/

${SUDO} cp ./nginx/nginx.conf "/etc/nginx/conf.d/${SERIAL}.conf"

TEST=(nginx -t)
RELOAD=(systemctl reload nginx)
  
if [[ $(${SUDO} "${TEST[@]}") -ne 0 ]] && [[ $(${SUDO} "${RELOAD[@]}") -ne 0 ]]; then
  echo "NGINX: Failure to reload."
  exit 1
fi